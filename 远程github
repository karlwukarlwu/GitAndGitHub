git remote # 列出当前的关联的远程库
    git remote -v # 列出当前的关联的远程库，并显示url

git remote add <远程库名> <url> # 关联远程仓库
git remote remove <远程库名>  # 删除远程库

git push -u <远程库名> <分支名> # 向远程库推送代码，并和当前分支关联(-u的意思)
    代码例子：git push -u origin main 前提是本地分支和远程分支的名字一样
    第一次push以后 接下来再push的时候，可以直接使用git push

git push <远程库> <本地分支>:<远程分支>
    git push origin feature:new-feature

git clone <url> # 从远程库下载代码
git clone <url> <本地目录名> # 从远程库下载代码，并指定本地目录名
    （上面这个是解决命名冲突的）

git push # 如果本地的版本低于远程库（有人已经push了，你没有获取这个版本），
            push默认是推不上去

git fetch # 要想推送成功，必须先确保本地库和远程库的版本一致，
    fetch它会从远程仓库下载所有代码，
    但是它不会将代码和当前分支自动合并
		 # 使用fetch拉取代码后，必须要手动对代码进行合并
		 git merge origin/master
		           远程仓库名/远程分支名
		           然后进行手动合并

git pull  # 从服务器上拉取代码并自动合并
